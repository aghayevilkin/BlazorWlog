@page "/news/details/{Id:int}"
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager
@inject ILocalStorageService localStorage
@inject INewsService newsService
@inject ISubscribeService subscribeService
@inject INewsCommentService newsCommentService
@inject IDialogService dialogService
@using System.Threading;

@if (News?.NewsImages == null)
{
    <div class="loading">
        <div class="fl spinner7 loader-gif"><p style="color: #fff;width: 510px;font-size: 20px;line-height: 1.2em;margin-left: -210px;margin-bottom: 40px;">Loading</p><div class="circ1"></div><div class="circ2"></div><div class="circ3"></div><div class="circ4"></div></div>
    </div>
}
else
{
    <!-- News With Sidebar Start -->
    <div class="container-fluid">
        <div class="container">
            <div class="row">
                <div class="col-lg-8">
                    <!-- News Detail Start -->
                    <div class="position-relative mb-3">

                        <MudCarousel Class="mud-width-full" Style="height:400px;" ShowArrows="@arrows" ShowBullets="@bullets" AutoCycle="@autocycle" TData="object">

                            @foreach (var item in News.NewsImages)
                            {
                                <MudCarouselItem Transition="transition" Color="@Color.Primary">
                                    <div class="d-flex" style="height:100%;">
                                        <img class="mx-auto my-auto" style="width:100%;" src="@item.NewsImageUrl" alt="slide">
                                    </div>
                                </MudCarouselItem>
                            }

                        </MudCarousel>


                        <div class="bg-white border border-top-0 p-4">
                            <div class="mb-3">
                                <a class="badge badge-primary text-uppercase font-weight-semi-bold p-2 mr-2"
                                   href="@($"news/category/{News.Category.NewsCategory.Id}")">@News.Category.NewsCategory.Name</a>
                                <a class="text-body" href="">@News.AddedDate.ToString("dd MMM yyyy")</a>
                            </div>
                            <h1 class="mb-3 text-secondary text-uppercase font-weight-bold">@News.Title</h1>
                            @((MarkupString)News.Details)
                        </div>
                        <div class="d-flex justify-content-between bg-white border border-top-0 p-4">
                            <div class="d-flex align-items-center">
                                <img class="rounded-circle mr-2" src="img/user.jpg" width="25" height="25" alt="">
                                <span>@News.User.Name @News.User.Surname</span>
                            </div>
                            <div class="d-flex align-items-center">
                                <span class="ml-3"><i class="far fa-eye mr-2"></i>@News.ViewCount</span>
                                <span class="ml-3"><i class="far fa-comment mr-2"></i>@CommentList.Where(x => x.NewsId == News.Id).Count()</span>
                            </div>
                        </div>
                    </div>
                    <!-- News Detail End -->
                    <!-- Comment List Start -->
                    <div class="mb-3">
                        <div class="section-title mb-0">
                            <h4 class="m-0 text-uppercase font-weight-bold">@CommentList.Where(x=>x.NewsId==News.Id).Count() Comments</h4>
                        </div>
                        @if (CommentList != null)
                        {
                            <div class="bg-white border border-top-0 p-4">
                                @foreach (var item in CommentList.Where(x => x.NewsId == News.Id && x.CommentId == null).Take(TakeLoad))
                                {

                                    <div class="media">

                                        <img src="img/user.jpg" alt="Image" class="img-fluid mr-3 mt-1" style="width: 45px;">
                                        <div class="media-body">
                                            <h6><a class="text-secondary font-weight-bold" href="">@item.User.Name @item.User.Surname</a> <small><i>@item.AddedDate.ToString("dd MMM yyyy")</i></small></h6>
                                            <p>
                                                @item.Message
                                            </p>
                                            <AuthorizeView>
                                                <Authorized>
                                                    <button class="btn btn-sm btn-outline-secondary" @onclick="()=>ReplyClicked(Convert.ToInt32(item.Id) , Convert.ToString(item.User.Name))">Reply</button>
                                                </Authorized>
                                            </AuthorizeView>
                                            


                                            <div class="media mt-4 d-block">

                                                @foreach (var item2 in CommentList.Where(x => x.CommentId == item.Id))
                                                {
                                                    <img src="img/user.jpg" alt="Image" class="img-fluid mr-3 mt-1"
                                                         style="width: 45px;">
                                                    <div class="media-body">
                                                        <h6><a class="text-secondary font-weight-bold" href="">@item2.User.Name @item2.User.Surname</a> <small><i>@item.AddedDate.ToString("dd MMM yyyy")</i></small></h6>
                                                        <p>
                                                            @item2.Message
                                                        </p>
                                                    </div>
                                                }

                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (CommentList.Where(x => x.NewsId == News.Id).Count() > 2)
                                {

                                     <button class="button @Loadingmore" @onclick="@TakeLoadClick">
                                         @if (IsLoading)
                                         {
                                             <span class="spinner"></span>
                                         }
                                         @LoadText
                                     </button>


                                }
                            </div>
                        }

                    </div>
                    <AuthorizeView Context="comment">
                        <Authorized>
                            <div class="mb-3">
                                <div class="section-title mb-0">
                                    @if (CommentUser == null)
                                    {
                                        <h4 class="m-0 text-uppercase font-weight-bold">Şərh yaz</h4>
                                    }
                                    else
                                    {
                                <h4 class="m-0 text-uppercase font-weight-bold"><i class="fa-solid fa-share"></i> @CommentUser ə Cavab verin</h4>
                                        <i class="fa-solid fa-x" style="cursor: pointer; color: #FFCC00;" @onclick="dontReplyClick"></i>
                                    }
                                </div>
                                <div class="bg-white border border-top-0 p-4">
                                    <EditForm Model="Comment" OnValidSubmit="HandleComment">
                                        <DataAnnotationsValidator />

                                        <div class="form-group">
                                            <label for="message">Message *</label>
                                            <InputTextArea @bind-Value="Comment.Message" cols="30" rows="5" class="form-control" />
                                            <ValidationMessage For="(()=>Comment.Message)" style="margin-top: 0.5rem;" />
                                        </div>
                                        <div class="form-group mb-0">
                                            <input type="submit" value="Şərh yaz"
                                                   class="btn btn-primary font-weight-semi-bold py-2 px-3">
                                        </div>
                                    </EditForm>
                                </div>
                            </div>
                        </Authorized>
                        <NotAuthorized>
                            <div class="mb-3">
                                <a href="/login" value="Şərh yaz"
                                   class="btn btn-primary font-weight-semi-bold py-2 px-3">Şərh yazmaq üçün daxil olun</a>
                            </div>
                        </NotAuthorized>
                    </AuthorizeView>

                </div>

                <NewsRightSide />

            </div>
        </div>
    </div>
    <!-- News With Sidebar End -->
}



@code {
    [Parameter]
    public int? Id { get; set; }

    public int? CommentID = null;
    public string CommentUser = null;

    public int TakeLoad { get; set; } = 2;
    public string Loadingmore { get; set; } = "";
    public string LoadText { get; set; } = "Daha çox yüklə";
    public bool IsLoading { get; set; } = false;

    private bool arrows = true;
    private bool bullets = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;


    public NewsDTO News { get; set; } = new NewsDTO();
    public IEnumerable<NewsDTO> NewsList { get; set; } = new List<NewsDTO>();
    public IEnumerable<NewsCommentDTO> CommentList { get; set; } = new List<NewsCommentDTO>();
    public NewsCommentDTO Comment { get; set; } = new NewsCommentDTO();

    protected override async Task OnInitializedAsync()
    {
        News = await newsService.GetNewsDetails(Id);
        NewsList = await newsService.GetNews();
        CommentList = await newsCommentService.GetNewsComment();

    }



    private async Task HandleComment()
    {
        if (await localStorage.GetItemAsync<UserDTO>
                (SD.Local_UserDetails) != null)
        {
            var userInfo = await localStorage.GetItemAsync<UserDTO>
                (SD.Local_UserDetails);
            Comment.UserId = userInfo.Id;
        }
        Comment.NewsId = News.Id;
        Comment.CommentId = CommentID;
        await newsCommentService.CreateNewsComment(Comment);

        await jsRuntime.ToastrSuccess("Create Comment");

        CommentList = await newsCommentService.GetNewsComment();
        Comment.Message = null;
        CommentID = null;
        CommentUser = null;


    }

    private async Task TakeLoadClick()
    {
        LoadText = "";
        IsLoading = true;
        await Task.Delay(1000);
        TakeLoad = TakeLoad + 2;
        IsLoading = false;
        LoadText = "Daha çox yüklə";
    }


    void ReplyClicked(int commentID, string commentUser)
    {
        CommentID = commentID;
        CommentUser = commentUser;
    }

    void dontReplyClick()
    {
        CommentID = null;
        CommentUser = null;
    }

}
